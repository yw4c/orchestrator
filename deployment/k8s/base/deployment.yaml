apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: orchestrator
    version: generic
  name: orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator
      version: generic
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: orchestrator
        version: generic
    spec:
      containers:
        - env:
            - name: OCH_PATH
              value: /app
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: yw4code/orchestrator:latest
          imagePullPolicy: Always
          name: orchestrator
          command:
            - ./orchestrator
          ports:
            - containerPort: 10000
              name: grpc
              protocol: TCP
          resources: { }
          readinessProbe:
            exec:
              command: [ "nc", "127.0.0.1", "10000" ]
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 6
          volumeMounts:
            - mountPath: /app/app.yaml
              name: config
              subPath: app.yaml
      restartPolicy: Always
      imagePullSecrets:
        - name: gcr
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: orchestrator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: burnner
  name: burnner
spec:
  replicas: 2
  selector:
    matchLabels:
      app: burnner
  template:
    metadata:
      labels:
        app: burnner
    spec:
      containers:
        - image: yw4code/burnner:latest
          imagePullPolicy: Always
          name: burnner
          command:
            - ./burnner
          ports:
            - containerPort: 10000
              name: grpc
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - image: yw4code/och-api:latest
          imagePullPolicy: Always
          name: api
          command:
            - ./och-api
          ports:
            - containerPort: 8081
              name: grpc
              protocol: TCP
          env:
            - name: ORC_GRPC_ADDR
              value: orchestrator:10000

      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nats-streaming
  name: nats-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-streaming
  template:
    metadata:
      labels:
        app: nats-streaming
    spec:
      containers:
        - image: nats-streaming:0.21.2-alpine
          imagePullPolicy: Always
          name: nats-streaming
          ports:
            - containerPort: 4222
              name: http
              protocol: TCP
            - containerPort: 8222
              name: metrix
              protocol: TCP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-tool
  labels:
    app: cluster-tool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-tool
  template:
    metadata:
      labels:
        app: cluster-tool
    spec:
      containers:
        - name: cluster-tool
          image: yw4code/cluster-tool:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          command:
            - /app/tool
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name



